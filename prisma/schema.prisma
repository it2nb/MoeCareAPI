generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model complaintype {
  complaintypeID Int @id @default(autoincrement()) @db.UnsignedInt
  complaintypeName String @db.VarChar(200)
  complain  complain[]
}

model complain {
  complainID  BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  complaintypeID  Int @db.UnsignedInt
  complaintype complaintype? @relation(fields: [complaintypeID], references: [complaintypeID])
  complainTitle String @db.VarChar(100)
  complainDetail  String? @db.Text
  complainDate  DateTime @db.DateTime(0)
  complainStatus  String @db.VarChar(20)
  agencyID Int?  @db.UnsignedInt
  agency   agency? @relation(fields: [agencyID], references: [agencyID])
  schoolID  BigInt?  @db.UnsignedBigInt
  complainerID  BigInt @db.UnsignedBigInt
  complainer complainer @relation(fields: [complainerID], references: [complainerID])
  complainImages String? @db.Text
  caseagency  caseagency[]
}

model caseagency {
  complainID BigInt @db.UnsignedBigInt
  complain  complain? @relation(fields: [complainID], references: [complainID])
  caseagencyNum Int @db.UnsignedInt
  complainerID  BigInt? @db.UnsignedBigInt
  complainer complainer? @relation(fields: [complainerID], references: [complainerID])
  agencyID  Int? @db.UnsignedInt
  agency  agency? @relation("caseagency" ,fields: [agencyID], references: [agencyID])
  userID  Int? @db.UnsignedInt
  users users? @relation(fields: [userID], references: [userID])
  caseagencyStatus String @db.VarChar(20)
  caseagnecyDetail String? @db.Text
  casetoagencyID Int? @db.UnsignedInt
  toagency  agency? @relation("casetoagency" ,fields: [casetoagencyID], references: [agencyID])
  caseagnecyDate  DateTime @db.DateTime(0)
  caseagencyUpdate DateTime @db.DateTime(0)
  caseagencyImages String? @db.Text

  @@id([complainID, caseagnecyDate]) 
}

model complainer {
  complainerID          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  complainerPrefixTh    String    @db.VarChar(10)
  complainerFirstnameTh String    @db.VarChar(50)
  complainerLastnameTh  String    @db.VarChar(50)
  complainerPrefixEn    String?   @db.VarChar(10)
  complainerFirstnameEn String?   @db.VarChar(50)
  complainerLastnameEn  String?   @db.VarChar(50)
  complainerGender      String?   @db.VarChar(10)
  complainerBirthday    DateTime?  @db.Date
  complainerIDcard      String?    @unique @db.VarChar(13)
  complainerPhone       String    @unique @db.VarChar(15)
  complainerEmail       String    @unique @db.VarChar(50)
  complainerAddress     String    @db.VarChar(100)
  provinceID            Int?
  province              province? @relation(fields: [provinceID], references: [provinceID])
  districtID            Int?
  district              district? @relation(fields: [districtID], references: [districtID])
  subdistrictID         Int?
  subdistrict           subdistrict? @relation(fields: [subdistrictID], references: [subdistrictID])
  postcode              String?    @db.VarChar(5)
  complainerDefective   String    @db.VarChar(10)
  complainerPassword    String    @db.VarChar(50)
  complainerEnable      String    @db.VarChar(20)
  complainerCreated     DateTime  @db.DateTime(0)
  createdUserID         Int?      @db.UnsignedInt
  complainerUpdated     DateTime? @db.DateTime(0)
  updatedUserID         Int?      @db.UnsignedInt
  complain              complain[]
  caseagency            caseagency[]

  @@index([complainerID, complainerPhone, complainerEmail, complainerPassword])
}

model agency {
  agencyID   Int     @id @default(autoincrement()) @db.UnsignedInt
  agencyName String  @db.VarChar(100)
  agencyCode String  @unique @db.VarChar(20)
  users      users[]
  complain   complain[]
  caseagency  caseagency[] @relation("caseagency")
  casetoagency  caseagency[] @relation("casetoagency")
}

model school {
  schoolID  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  schoolCode String @unique @db.VarChar(20)
  schoolType String @db.VarChar(50)
  schoolName  String @db.VarChar(150)
  schoolAddress String @db.Text
  provinceID            Int
  province              province? @relation(fields: [provinceID], references: [provinceID])
  districtID            Int
  district              district? @relation(fields: [districtID], references: [districtID])
  subdistrictID         Int
  subdistrict           subdistrict? @relation(fields: [subdistrictID], references: [subdistrictID])
}

model district {
  districtID   Int    @id @default(0)
  districtName String @db.VarChar(100)
  provinceID   Int    @default(0)
  complainer   complainer[]
  school        school[]

  @@index([districtID, provinceID], map: "prefecture_ID")
}

model province {
  provinceNo    Int    @default(0)
  provinceID    Int    @id @default(0)
  provinceName  String @db.VarChar(100)
  regionID      Int    @default(0)
  regiongroupID Int
  complainer    complainer[]
  school        school[]

  @@index([provinceNo, provinceID, regionID], map: "province_no")
}

model subdistrict {
  subdistrictID   Int    @id @default(0)
  subdistrictName String @db.VarChar(100)
  post            Int    @default(0)
  districtID      Int    @default(0)
  complainer      complainer[]
  school        school[]

  @@index([subdistrictID, districtID], map: "district_ID")
  @@index([districtID], map: "prefectur_id")
}

model users {
  userID       Int     @id @default(autoincrement()) @db.UnsignedInt
  userName     String  @db.VarChar(50)
  userPassword String  @db.VarChar(50)
  userStatus   String  @db.VarChar(20)
  userType     String  @db.VarChar(20)
  agencyID     Int?    @db.UnsignedInt
  agency       agency? @relation(fields: [agencyID], references: [agencyID])
  caseagency   caseagency[]
  

  @@index([agencyID], map: "users_agencyID_fkey")
}
